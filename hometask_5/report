В программе я создаю по одному экземпляру каждой сущности:  
    -локальная переменная 
    -глобальная переменная 
    -указатель на кусок памяти, выделенной динамически 
    -пользовательская функция 
    -системная функция 
  
После чего я вывожу адрес в памяти каждой сущности. 
  
Далее я привожу таблицу с результатами. 
Для удобства восприятия информации, я перевел адреса из шестнадцатеричного вида в десятичный 
|глобал. пер.|локал. пер. |динам. пер. | системн. ф.| пользов. ф.| 
|  4223088   |  6422288   | 11670608   |  4209440   |  4199611   | 
  
  
Из таблицы мы видим, что глобальные переменные, системные функции и пользовательские функции  
находятся относительно недалеко друг от друга. Локальные переменные находятся уже в другой части памяти, а  
адрес динамической памяти отличается в несколько раз от памяти остальных сущностей. 
  
Эти тесты подтверждают теорию устройства памяти в программах на С. Согласно этой теории, есть 4 блока памяти:  
стек, динамическая память(куча), глобальные переменные, код программы. В нашем случае системные функции и  
пользовательские функции - это код программы, и как мы видим из результатов теста, адреса этих сущностей находятся  
относительно недалеко друг от друга. Мы так же видим, что недалеко от адресов функций,  
находится адрес глобальных переменных. Это можно объяснить тем, что глобальные переменные, как и код программы живут 
пока работает программа. И поэтому вероятно они и располагаются в соседних блоках памяти. Локальные переменные находятся 
в стеке и как видно из тестов, стек это отдельный участок памяти. Динамическая память - это так же отдельная часть памяти  
и как видно из тестов, ее адрес сильно отличается от других областей памяти. 